#!/bin/bash
# Version "Merged" alpha
target="$(curl -s project-mayhem.se/probes/ip-wifi.txt)"
logtarget="$(curl -s project-mayhem.se/probes/ip-logtarget.txt)"
iwnic=$(ifconfig | grep wl | awk '{print $1}' | tr -d ':')
remotescript=/home/chprobe/wifi/screen-do-stuff-script-nopromptv2
count=$(( ( RANDOM % 9999 )  + 100 ))
#logevent='"$(logger -p info)"'


while true
do
	case "$1" in
		-logtype elastic)
		       logstash_parsing="awk '{print $1,$6,$8,$10,$13,$14.$15,$16,$17,$18}' | tr -d '(%)|:' | logger -t iperf3udp[$(echo $count)] -p local4.debug"	;;
		-logtype rrd)
			rrd_parsing=sleep 15
    "rrdtool update /home/chprobe/tcpdb_$(hostname -d).rrd --template $direction N:$(tail /var/log/iperf3tcp.log | egrep $count | awk '{print $7}')"
    rrd_db="rrdtool update /home/chprobe/tcpdb_$(hostname -d).rrd --template downstream N:$(tail /var/log/iperf3tcp.log | egrep $count | awk '{print $7}')"
		       
# Daemon settings
run_udpdaemon=$(/usr/bin/iperf3 --client $target -u -T $direction -b ${arr[$rand]} -t 60 | egrep 'iperf Done' -B 3 | egrep 0.00-60.00 | if [ -z ${rrd_parsing+x} ]; then $rrd_parsing
	       	if [ -z ${logstash_parsing+x} ]; then $logstash_parsing 
	else
		$direction
		 fi
	 fi	
	 | logger -t iperf3udp[$(echo $count)] -p local4.debug)
run_tcpdaemon=$(/bin/iperf3 --client $target -T $direction -P 15 -w 1m 2>&1 | egrep 'SUM.*rece' | awk '/Mbits\/sec/ {print $1,$7}' | logger -t iperf3tcp[$(echo $count)] -p local3.debug & echo "[chprobe_iperf3] tcp daemon started" | logger -p info | if [ -z ${rrd_parsing+x} ]; then $rrd_parsing
                if [ -z ${logstash_parsing+x} ]; then $logstash_parsing 
        else
		$direction
		fi
	fi) 
	
        	 -t) echo 'TCP' 

case "$(pgrep -f "iperf3 --client" | wc -w)" in

0)  echo "[chprobe_iperf3] Let's see if we can start the tcp daemon" | logger -p info	
      	while iperf3 -c $target -t 1 | grep busy; do sleep $[ ( $RANDOM % 5 ) + 3]s  && echo '[chprobe_iperf3] waiting cuz server is busy' | logger -p info;done
    echo "[chprobe_iperf3] Starting the tcp daemon - downstream" | logger -p info
$run_tcpdaemon
    ;;
1)  echo "[chprobe_iperf3] iperf tcp daemon is already running" | logger -p info
    while pgrep -f "iperf3 --client" | wc -w | grep 1; do sleep $[ ( $RANDOM % 5 ) + 3]s && echo '[chprobe_iperf3] waiting cuz a daemon is running' | logger -p info;done
    echo "[chprobe_iperf3] Starting the tcp daemon - downstream"
    $run_tcpdaemon
    ;;
*)  echo "[chprobe_iperf3] multiple instances of iperf udp daemon running. Stopping & restarting iperf:" | logger -p info
    kill $(pgrep -f "iperf3 --client" | awk '{print $1}')
    ;;
esac;
	;;
		-u) echo 'UDP'
target="$(curl -s project-mayhem.se/probes/ip-udp.txt)"
count=$(( ( RANDOM % 9999 )  + 1 ))
iwnic=$(ifconfig | grep wl | awk '{print $1}' | tr -d ':')
data=$(tail /var/log/iperf3udp.log | egrep $count | awk '{print $11,$14,$9}' | tr -d '(%)' | sed 's/ /,/g')
arr[0]="5m"
arr[1]="10m"
arr[2]="20m"
rand=$[ $RANDOM % 3 ]

# Uncomment to use Iperf UDP Daemon (with random timer)
case "$(pgrep -f "iperf3 --client" | wc -w)" in

0)  echo "[chprobe_iperf3] Let's see if we can start the udp daemon" | logger -p info
    while iperf3 -c $target -t 1 | grep busy; do sleep $[ ( $RANDOM % 10 ) + 3]s && echo '[chprobe_iperf3] waiting cuz server is busy' | logger -p info;done
    echo "[chprobe_iperf3] udp daemon started - downstream" | logger -p info
    /usr/bin/iperf3 --client $target -u -T downstream -R -b ${arr[$rand]} -t 60 | egrep 'iperf Done' -B 3 | egrep 0.00-60.00 | awk '{print $1,$6,$7,$8,$9,$10,$11,$12,$13}' | logger -t iperf3udp[$(echo $count)] -p local4.debug
    sleep 1
    rrdtool update /home/chprobe/udpdb-ds_$(hostname -d).rrd --template ds_jitter:ds_pl:ds_bitrate N:$(tail /var/log/iperf3udp.log | egrep $count | egrep down | awk '{print $11}'):$(tail /var/log/iperf3udp.log | egrep $count | egrep down | awk '{print $14}' | tr -d '(%)'):$(tail /var/log/iperf3udp.log | egrep $count | egrep down | awk '{print $9}')
    ;;
1)  echo "[chprobe_iperf3] iperf daemon already running" | logger -p info
    while pgrep -f "iperf3 --client" | wc -w | grep 1; do sleep $[ ( $RANDOM % 10 ) + 3]s && echo '[chprobe_iperf3] waiting cuz a daemon is running' | logger -p info;done
    echo "[chprobe_iperf3] udp daemon started - downstream" | logger -p info   
    /usr/bin/iperf3 --client $target -u -T downstream -R -b ${arr[$rand]} -t 60 | egrep 'iperf Done' -B 3 | egrep 0.00-60.00 | awk '{print $1,$6,$7,$8,$9,$10,$11,$12,$13}' | logger -t iperf3udp[$(echo $count)] -p local4.debug
    sleep 1
    rrdtool update /home/chprobe/udpdb-ds_$(hostname -d).rrd --template ds_jitter:ds_pl:ds_bitrate N:$(tail /var/log/iperf3udp.log | egrep $count | egrep down | awk '{print $11}'):$(tail /var/log/iperf3udp.log | egrep $count | egrep down | awk '{print $14}' | tr -d '(%)'):$(tail /var/log/iperf3udp.log | egrep $count | egrep down | awk '{print $9}')
    ;;
*)  echo "[chprobe_iperf3] multiple instances of iperf udp daemon running. Stopping & restarting iperf:" | logger -p info
    kill $(pgrep -f "iperf3 --client" | awk '{print $1}')
    ;;
esac;
	;;
			-w) echo 'you choose wifi' ;;
			        -h)  cat <<USAGE
usage: $0 [-t] [-u] [-w] [-h] args

    You cannot combine options, as with -ac.
USAGE
            exit 1
            ;;
        *)
            echo Use -h for help!
            break;
            ;;
    esac

    shift       # toss current $1; we're done with it now
done

for p in "$@"
do
    echo "Non-option argument: '$p'"
done
