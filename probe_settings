#!/bin/bash
# Version 2.7

# Load config file
chprobe_configfile="/var/chprobe/$(hostname -d).cfg"
source $chprobe_configfile

# Abort if probe settings are disabled
if [ $probe_settings = "disable" ]; then echo 'Probe settings disabled by user, aborting' && exit 0
fi

# If configuration is commited, check all variables
if [ $chprobe_commit = "true" ]; then

# Config Fail Check function
check_vars () {
if [ $1 -ge $2 -a $1 -le $3 ]; then echo "looks right? $1 $2"
else echo "The configured range: $2 - $3 for $1 is out of range, aborting" && exit 1
fi
}

# Check or override vars
check_vars $callhome_interval 20 60

	if [ $chprobe_wrk = "enable" ]; then
check_vars $wrk_interval 1 60
check_vars $wrk_workers 3 10
check_vars $wrk_sessions 1 5000
check_vars $wrk_duration 10 360
	fi

	if [ $chprobe_icmp = "enable" ]; then
check_vars $icmp_cron_interval 2 60
check_vars $icmp_cron_interval_ipv6 2 60
#check_vars $icmp1_interval '0.5' 100 
#check_vars $icmp2_interval '0.5' 100
#check_vars $icmp3_interval '0.5' 100
check_vars $icmp1_size 54 9000
check_vars $icmp2_size 54 9000
check_vars $icmp3_size 54 9000
check_vars $icmp1_packets 5 100
check_vars $icmp2_packets 5 100
check_vars $icmp3_packets 5 100
	fi

	if [ $chprobe_dns = "enable" ]; then
check_vars $dig_interval 2 60
	fi

	if [ $chprobe_iperf3tcp = "enable" ]; then
check_vars $iperf3tcp_ds_interval 2 60
check_vars $iperf3tcp_us_interval 2 60
	fi

	if [ $chprobe_iperf3udp = "enable" ]; then
check_vars $iperf3udp_ds_interval 2 60
check_vars $iperf3udp_us_interval 2 60
	fi

	if [ $chprobe_bbk = "enable" ]; then
check_vars $iperf3udp_ds_interval 2 60
check_vars $iperf3udp_us_interval 2 60
	fi

	if [ $chprobe_bbk = "enable" ] || [ $chprobe_bbk_ipv6 = "enable" ] || [ $chprobe_bbk_ipv6 = "auto" ]; then
check_vars $chprobe_bbk_interval 2 60
check_vars $chprobe_bbk_interval_ipv6 2 60
	fi

else echo "No commits detected."
fi

##

# Run with argument "-s" to enabled strict mode
# When enabled, all multi tests and icmp tests are disabled during high performance tests (every 15th/16th minute)
# This will obviously not give the desired effect if you modified the default schedule for iperf3/bbk
        case "$1" in
        -s) strict_mode=true ;;
        -h)  cat <<USAGE
usage: $0 [-s] [-h]

    -h) See this help
    -s) Enable strict mode
USAGE
            exit 0
            ;;
        *) strict_mode=false # Default setting
    esac

# Check IPv6 connectivity
echo "Checking IPv6 connectivity, stay tuned... (Your commit should be OK. Bye bye!)" &&

# In case ping6 returns errors we assume IPv6 isn't working
ping6 -q -c 1 2a00:1450:400f:802::2003
if [ $? -ge 2 ]; then echo "We don't have IPv6 connectivity (error returned: $?)" && ipmode=ipv4
	else

	# No errors returned at least, let's see if we actually have connectivity
	noconnectivity="$(ping6 -q -c 10 2a00:1450:400f:802::2003 | egrep '100%' | wc -l)"
	if [ $noconnectivity -ge 1 ]; then echo "We don't have IPv6 connectivity" && ipmode=ipv4
       else echo "We have IPv6 connectivity" && ipmode=dualstack
       fi;fi

# chprobe crontab
if [ $chprobe_crontab = "enable" ]; then
echo "SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=$cron_user

# For details see man 4 crontabs

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command to be executed
*/$callhome_interval *  *  *  * $cron_user $probedir./callhome.sh > /dev/null
*/5 *  *  *  * root bash /var/chprobe/./chprobe.sh > /etc/motd 2> /dev/null" > /etc/crontab

if [ $chprobe_iperf3udp = "enable" ]; then
echo "*/$iperf3udp_us_interval  *  *  *  * $cron_user $probedir./udp_iperf3_client_merged.sh -us &> /dev/null
*/$iperf3udp_ds_interval  *  *  *  * $cron_user $probedir./udp_iperf3_client_merged.sh -ds &> /dev/null" >> /etc/crontab
	else echo "iperf3 udp tests disabled - ($chprobe_iperf3udp)"
fi

if [ $chprobe_iperf3tcp = "enable" ]; then
echo "*/$iperf3tcp_us_interval *  *  *  * $cron_user $probedir./tcp_iperf3_clientv3.sh -g -u -4 &> /dev/null
*/$iperf3tcp_ds_interval *  *  *  * $cron_user $probedir./tcp_iperf3_clientv3.sh -g -d -4 &> /dev/null" >> /etc/crontab
        else echo "iperf3 tcp tests disabled - ($chprobe_iperf3tcp)"
fi

if [ $chprobe_probemanager = "enable" ]; then
echo "*/30 *  *  *  * $cron_user $probedir./probemanager managerupdate &> /dev/null
*/60 *  *  *  * $cron_user $probedir./probemanager update &> /dev/null" >> /etc/crontab
        else echo "probemanager disabled - ($chprobe_probemanager)"
fi

if [ $chprobe_backup = "enable" ]; then
echo "5 7  *  *  7    $cron_user $probedir./probemanager backup &> /dev/null" >> /etc/crontab
fi

if [ $chprobe_wrk = "enable" ]; then
echo "*/$wrk_interval * * * * $cron_user $probedir./multi_chprobe -w $wrk_workers $wrk_sessions $wrk_duration $wrk_target &> /dev/null" >> /etc/crontab
fi

if [ $chprobe_bbk = "enable" ]; then
echo "*/$chprobe_bbk_interval *  *  *  * $cron_user $probedir./bbk_chprobe -4 -g &> /dev/null" >> /etc/crontab
fi

if [ $chprobe_bbk_ipv6 = "enable" ] || [ $chprobe_bbk_ipv6 = "auto" ]; then
echo "*/$chprobe_bbk_interval_ipv6 *  *  *  * $cron_user $probedir./bbk_chprobe -6 -g &> /dev/null" >> /etc/crontab
fi

# crontab IPv4 + strict scheduling
	if [ $strict_mode = "true" ]; then
if [ $chprobe_icmp = "enable" ]; then
echo "2-12/2 * * * * $cron_user $probedir./icmp_chprobe -v4 $icmp1_packets $icmp1_interval $icmp1_size $icmp1_target &> /dev/null
18-28/2 * * * * $cron_user $probedir./icmp_chprobe -v4 $icmp1_packets $icmp1_interval $icmp1_size $icmp1_target &> /dev/null
32-58/2 * * * * $cron_user $probedir./icmp_chprobe -v4 $icmp1_packets $icmp1_interval $icmp1_size $icmp1_target &> /dev/null
2-12/2 * * * * $cron_user $probedir./icmp_chprobe -v4 $icmp2_packets $icmp2_interval $icmp2_size $icmp2_target &> /dev/null
18-28/2 * * * * $cron_user $probedir./icmp_chprobe -v4 $icmp2_packets $icmp2_interval $icmp2_size $icmp2_target &> /dev/null
32-58/2 * * * * $cron_user $probedir./icmp_chprobe -v4 $icmp2_packets $icmp2_interval $icmp2_size $icmp2_target &> /dev/null
2-12/2 * * * * $cron_user $probedir./icmp_chprobe -v4 $icmp3_packets $icmp3_interval $icmp3_size $icmp3_target &> /dev/null
18-28/2 * * * * $cron_user $probedir./icmp_chprobe -v4 $icmp3_packets $icmp3_interval $icmp3_size $icmp3_target &> /dev/null
32-58/2 * * * * $cron_user $probedir./icmp_chprobe -v4 $icmp3_packets $icmp3_interval $icmp3_size $icmp3_target &> /dev/null" >> /etc/crontab
fi

if [ $chprobe_dns = "enable" ]; then
echo "2-12/2 * * * * $cron_user $probedir./multi_chprobe -d $dig_server $dig_target 4 &> /dev/null
18-28/2 * * * * $cron_user $probedir./multi_chprobe -d $dig_server $dig_target 4 &> /dev/null
32-58/2 * * * * $cron_user $probedir./multi_chprobe -d $dig_server $dig_target 4 &> /dev/null" >> /etc/crontab
fi

if [ $chprobe_https = "enable" ]; then
echo "2-12/2 * * * * $cron_user $probedir./multi_chprobe -e $https_target 4 &> /dev/null
18-28/2 * * * * $cron_user $probedir./multi_chprobe -e $https_target 4 &> /dev/null
32-58/2 * * * * $cron_user $probedir./multi_chprobe -e $https_target 4 &> /dev/null" >> /etc/crontab
fi

# crontab IPv6 + strict scheduling
                if [ $ipmode = "dualstack" ]; then
if [ $chprobe_icmp = "enable" ]; then
echo "2-12/2 * * * * $cron_user $probedir./icmp_chprobe -v6 $icmp1_packets $icmp1_interval $icmp1_size $icmp1_target &> /dev/null
18-28/2 * * * * $cron_user $probedir./icmp_chprobe -v6 $icmp1_packets $icmp1_interval $icmp1_size $icmp1_target &> /dev/null
32-58/2 * * * * $cron_user $probedir./icmp_chprobe -v6 $icmp1_packets $icmp1_interval $icmp1_size $icmp1_target &> /dev/null
2-12/2 * * * * $cron_user $probedir./icmp_chprobe -v6 $icmp2_packets $icmp2_interval $icmp2_size $icmp2_target &> /dev/null
18-28/2 * * * * $cron_user $probedir./icmp_chprobe -v6 $icmp2_packets $icmp2_interval $icmp2_size $icmp2_target &> /dev/null
32-58/2 * * * * $cron_user $probedir./icmp_chprobe -v6 $icmp2_packets $icmp2_interval $icmp2_size $icmp2_target &> /dev/null
2-12/2 * * * * $cron_user $probedir./icmp_chprobe -v6 $icmp3_packets $icmp3_interval $icmp3_size $icmp3_target &> /dev/null
18-28/2 * * * * $cron_user $probedir./icmp_chprobe -v6 $icmp3_packets $icmp3_interval $icmp3_size $icmp3_target &> /dev/null
32-58/2 * * * * $cron_user $probedir./icmp_chprobe -v6 $icmp3_packets $icmp3_interval $icmp3_size $icmp3_target &> /dev/null" >> /etc/crontab
fi

if [ $chprobe_https = "enable" ]; then
echo "2-12/2 * * * * $cron_user $probedir./multi_chprobe -e $https_target 6 &> /dev/null
18-28/2 * * * * $cron_user $probedir./multi_chprobe -e $https_target 6 &> /dev/null
32-58/2 * * * * $cron_user $probedir./multi_chprobe -e $https_target 6 &> /dev/null" >> /etc/crontab
fi

	if [ $chprobe_dns = "enable" ]; then
echo "2-12/2 * * * * $cron_user $probedir./multi_chprobe -d $dig_server_ipv6 $dig_target 6 &> /dev/null
18-28/2 * * * * $cron_user $probedir./multi_chprobe -d $dig_server_ipv6 $dig_target 6 &> /dev/null
32-58/2 * * * * $cron_user $probedir./multi_chprobe -d $dig_server_ipv6 $dig_target 6 &> /dev/null" >> /etc/crontab
	fi
fi

# crontab IPv4 + no strict scheduling
        elif [ $strict_mode = "false" ]; then
                if [ $chprobe_icmp = "enable" ]; then
echo "*/$icmp1_croninterval  *  *  *  * $cron_user $probedir./icmp_chprobe -v4 $icmp1_packets $icmp1_interval $icmp1_size $icmp1_target &> /dev/null
*/$icmp2_croninterval  *  *  *  * $cron_user $probedir./icmp_chprobe -v4 $icmp2_packets $icmp2_interval $icmp2_size $icmp2_target &> /dev/null
*/$icmp3_croninterval  *  *  *  * $cron_user $probedir./icmp_chprobe -v4 $icmp3_packets $icmp3_interval $icmp3_size $icmp3_target &> /dev/null" >> /etc/crontab
		fi

if [ $chprobe_wrk = "enable" ]; then
echo "*/$wrk_interval * * * * $cron_user $probedir./multi_chprobe -w $wrk_workers $wrk_sessions $wrk_duration $wrk_target &> /dev/null
*/$dig_interval * * * * $cron_user $probedir./multi_chprobe -d $dig_server $dig_target 4 &> /dev/null
*/$https_interval * * * * $cron_user $probedir./multi_chprobe -e $https_target 4 &> /dev/null" >> /etc/crontab
fi

	        if [ $ipmode = "dualstack" ]; then

# crontab IPv6 + no strict scheduling
if [ $chprobe_icmp = "enable" ]; then
echo "*/$icmp_cron_interval_ipv6  *  *  *  * $cron_user $probedir./icmp_chprobe -v6 $icmp4_packets 1 $icmp1_size $icmp1_target &> /dev/null
*/$icmp_cron_interval_ipv6  *  *  *  * $cron_user $probedir./icmp_chprobe -v6 $icmp4_packets 1 $icmp3_size $icmp3_target &> /dev/null
*/$icmp_cron_interval_ipv6  *  *  *  * $cron_user $probedir./icmp_chprobe -v6 $icmp4_packets $icmp2_interval $icmp1_size $icmp1_target &> /dev/null" >> /etc/crontab
fi

if [ $chprobe_dns = "enable" ]; then
echo "*/$dig_interval * * * * $cron_user $probedir./multi_chprobe -d $dig_server_ipv6 $dig_target 6 &> /dev/null" >> /etc/crontab
fi

if [ $chprobe_https = "enable" ]; then
echo "*/$https_interval * * * * $cron_user $probedir./multi_chprobe -e $https_target 6 &> /dev/null" >> /etc/crontab
fi
        	fi
	fi

# Now restart crontab
systemctl restart crond
fi

# rc.local
if [ $chprobe_rc_local = "enable" ]; then
echo "Installing probe rc.local and syslog"
echo "#!/bin/bash
# CHPROBE RC.LOCAL MOD
touch /var/lock/subsys/local
/$cron_user/./fw-rules
$probedir./smoke-slave
$probedir./probemanager managerupdate && $probedir./probemanager update" > /etc/rc.local
chmod +x /etc/rc.d/rc.local
fi

# uPnP
if [ $chprobe_upnp = "enable"  ]; then
	if [ $chprobe_crontab = "enable"  ]; then
		if [ $chprobe_upnp_timer -le 3600 -a $chprobe_upnp_timer -ge 60 ]; then
	crontime="$(expr $chprobe_upnp_timer / 60)"
	echo "*/$crontime *  *  *  * $cron_user $probedir./upnpc-probe.sh > /dev/null" >> /etc/crontab
	else echo 'upnp timer is not within supported range (60-3600 sec). Not adding a crontab entry'
		fi
	fi

        if [ $chprobe_rc_local = "enable"  ]; then
	echo "$probedir./upnpc-probe.sh" >> /etc/rc.local
	fi
fi

# logrotate
if [ $chprobe_logrotate = "enable" ]; then
echo "# CREATED BY CHPROBE SCRIPT
/var/log/iperf*.log
/var/log/chprobe*.log
{
weekly
rotate 10
size 500K
delaycompress
}
/var/log/chprobe_wanip.txt {
daily
rotate 0
size 200
}" > /etc/logrotate.d/chprobe
/usr/bin/bash /etc/cron.daily/logrotate
fi

sleep 1 &&
systemctl restart rsyslog

# Save unique probe timer locally
echo $chprobe_timer > /var/chprobe/chprobe_timer.txt

# Legacy
echo $chprobe_timer > /var/chprobe_timer.txt

# Enable ssh_tunnel service
if [ $ssh_tunnel = "enable" ]; then
	if [ `systemctl is-active sshtunnel` != 'active' ]; then
	systemctl start sshtunnel && systemctl enable sshtunnel
	fi
fi

# Reload necessary modules when config is being commited
if [ $chprobe_commit = "true" ]; then
systemctl restart sshtunnel
echo "$(date) - Configuration commit for $(hostname -d)" >> /var/log/chprobe_commits.log
fi

# Remove commit status in configuration file
chprobe_commit=false && sed -i 's@chprobe_commit=true@chprobe_commit=false@g' $chprobe_configfile

echo "Mission complete."
