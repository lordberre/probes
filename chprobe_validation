#!/bin/bash

## default vars
use_curl=false
use_iperf3=false
use_ab=false
iperf3_protocol=false
count=$(( ( RANDOM % 9999 )  + 100 ))
probe="`cut -d "." -f 2 <<< $(hostname)`"
##

usage () {
cat <<USAGE
How to use: $0 -s or -t
    -s) TCP/UDP stream validation (never-ending streams)
    -t) HTTP validation (one shot)
USAGE
 }

options='s:th'
while getopts $options option
do
    case $option in
        s  ) use_iperf3=true;iperf3_protocol=${OPTARG}       ;;
        t  ) use_curl=true       ;;
        h  ) usage; exit;;
        \? ) echo "Unknown option: -$OPTARG" >&2; exit 1;;
        :  ) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
        *  ) echo "Unimplemented option: -$OPTARG" >&2; exit 1;;
    esac
done

shift $(($OPTIND - 1))

if [ $use_curl = false ] && [ $use_iperf3 = false ]; then echo "-s or -t must be specified, aborting" && exit 1
fi

debug=false

# Curl RTT
if [ $use_curl = "true" ]; then
logfacility="chprobe_httpvalidation[$(echo $count)]"
http_target=somehost
url="http://${http_target}/bench/{256K,257K,259K,260K,275K,280K,286K,294K,302K,306K,313K,315K,316K,325K,327K,330K,331K,339K,340K,348K,351K,354K,365K,368K,374K,375K,376K,380K,381K,383K,384K,397K,399K,400K,406K,408K,414K,424K,434K,436K,438K,439K,447K}KB"
http_outfile="/var/log/chprobe_httpvalidation.log"
display_options="
time_namelookup:  %{time_namelookup}\n
time_connect:  %{time_connect}\n
time_appconnect:  %{time_appconnect}\n
time_pretransfer:  %{time_pretransfer}\n
time_redirect:  %{time_redirect}\n
time_starttransfer:  %{time_starttransfer}\n
speed_download:  %{speed_download}\n
speed_upload: %{speed_upload}\n
 ----------\n
time_total:  %{time_total}\n"

#echo "$display_options"
if [ $debug = "false" ]; then

parse_result() { # Sums all results since it's presented individually from curl
echo "$1" | grep $2 | awk '{sum+=$2} END {print sum}'
}

    result=`curl -L -s -w "$display_options" -o /dev/null "$url"` # | awk {'print $2'} | xargs
    total_time_namelookup=`parse_result "$result" time_namelookup`
    total_time_connect=`parse_result "$result" time_connect`
    total_time_appconnect=`parse_result "$result" time_appconnect`
    total_time_pretransfer=`parse_result "$result" time_pretransfer`
    total_time_redirect=`parse_result "$result" time_redirect`
    total_time_starttransfer=`parse_result "$result" time_starttransfer`
    total_time_total=`parse_result "$result" time_total`
    declare -i file_count=`echo "$result" | grep -c time_total`
    total_time_total_ms=`echo "$total_time_total * 1000" | bc`
#    declare -i total_time_total_int=${total_time_total_ms%.*}
#    declare -i total_time_total_int=`echo "($total_time_total_ms+0.5)/1" | bc`
    avg_totaltime_perfile=`echo $total_time_total_ms / $file_count | bc`
    echo "$total_time_namelookup $total_time_connect $total_time_appconnect $total_time_pretransfer $total_time_redirect $total_time_starttransfer $total_time_total" | sed -e "s/^/$(date "+%b %d %H:%M:%S") ${probe} $logfacility: $http_target $file_count $avg_totaltime_perfile /" >> $http_outfile
else
    curl -v -w "$display_options" -o /dev/null "$url"
fi

# Iperf3 stream settings
elif [ $use_iperf3 = "true" ]; then
iperf3_outfile="/var/log/chprobe_iperf3validation.log"
iperf3_udplogfacility="chprobe_iperf3_udpstream[$(echo $count)]"
iperf3_tcplogfacility="chprobe_iperf3_tcpstream[$(echo $count)]"
iperf3_server="somehost"
iperf3_tcpport1="5262"
iperf3_tcpport2="5253"
iperf3_udpport1="5264"
iperf3_udpport2="5265"
iperf3_tcpbandwidth="5m"
iperf3_udpbandwidth="1m"
iperf3_udpduration="120"
iperf3_tcpduration="600"

##
## Streams will be ran in backround in order to allow parallelisation and granuilariy of the reports (tcp stream)
##

## TCP
   if [ $iperf3_protocol = "tcp" ]; then

# DS
   while true;do
   iperf3 -c $iperf3_server -T downstream -P 2 -i 5 -b $iperf3_tcpbandwidth -p $iperf3_tcpport1 -R -t $iperf3_tcpduration -f m --forceflush | while read i;do echo $i | grep SUM | egrep -v 'receiver|sender' | awk {'print $7'} | sed 's/[^0-9.]*//g' | sed '/^$/d' | sed -e "s/^/$(date "+%b %d %H:%M:%S") ${probe} $iperf3_tcplogfacility: downstream /" >> $iperf3_outfile;done &
   tcp_pids+=($!)

# US
# if bidirectional... TODO
#   iperf3 -c $iperf3_server -T upstream -P 2 -i 5 -b $iperf3_tcpbandwidth -p $iperf3_tcpport1 -t $iperf3_tcpduration -f m --forceflush | while read i;do echo $i | grep SUM | egrep -v 'receiver|sender' | awk {'print $7'} | sed 's/[^0-9.]*//g' | sed '/^$/d' | sed -e "s/^/$(date "+%b %d %H:%M:%S") ${probe} $iperf3_tcplogfacility: upstream /" >> $iperf3_outfile;done &
 #  tcp_pids+=($!)

       for pid in ${tcp_pids[*]}; do
          echo $pid && wait $pid
       done
   sleep 3
   done

   elif [ $iperf3_protocol = "udp" ]; then
## UDP

# DS
udp_pids=()
   while true;do 
   iperf3 -u --client $iperf3_server -T downstream -R -b $iperf3_udpbandwidth -t $iperf3_udpduration -p $iperf3_udpport1 -f m 2> /dev/stdout | egrep 'iperf Done' -B 3 | egrep 0.00-$iperf3_udpduration | grep -v sender | awk '{print $1,$6,$8,$10,$13,$14.$15,$16,$17,$18}' | tr -d '(%)|:' | sed -e "s/^/$(date "+%b %d %H:%M:%S") ${probe} $iperf3_udplogfacility: /" >> $iperf3_outfile &
   udp_pids+=($!)

# US
   iperf3 -u --client $iperf3_server -T upstream -b $iperf3_udpbandwidth -t $iperf3_udpduration -p $iperf3_udpport2 -f m 2> /dev/stdout | egrep 'iperf Done' -B 3 | egrep 0.00-$iperf3_udpduration | grep -v sender | awk '{print $1,$6,$8,$10,$13,$14.$15,$16,$17,$18}' | tr -d '(%)|:' | sed -e "s/^/$(date "+%b %d %H:%M:%S") ${probe} $iperf3_udplogfacility: /" >> $iperf3_outfile &
   udp_pids+=($!)

       for pid in ${udp_pids[*]}; do
          echo $pid && wait $pid
       done
      sleep 3
      if [`pgrep -f "iperf3 -u --client $iperf3_server"` -ne 0]; then 
         echo "Pids are still present, `pgrep -fa "iperf3 -u --client $iperf3_server"`"
      fi
   done
   else echo "no iperf3 protocol specified, aborting" && exit 1
   fi
fi
